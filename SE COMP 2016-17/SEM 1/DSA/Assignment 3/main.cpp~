#include <iostream>
#include "matrix.h"

using namespace std;

int main()
{
	cMatrix mA,mRet;
	mA.vGetMatrixData();
	char inp;
	do
	{
		cout<<"1. Check whether given matrix is upper triangular or not\n";
		cout<<"2. Compute summation of diagonal elements\n";
		cout<<"3. Compute transpose of matrix\n";
		cout<<"4. Add a Matrix to it\n";
		cout<<"5. Subtract a Matrix to it\n";
		cout<<"6. Multiply a Matrix to it\n";
		cout<<"Matrix A\n";
		mA.vShowMatrixData();
		cin>>inp;
		switch (inp)
		{
			case '1':
			if(mA.bIsUpperTriangular())
				cout<<"The given Matrix is upper triangular.\n";
			else
				cout<<"The given Matrix is not upper triangular.\n";
			break;
			case '2':
			cout<<"Sum of diagonal elements is: "<<endl;
			mA.vSumofDiagEle();
			break;
			case '3':
			cout<<"Transpose is: \n";
			mRet = mA.mTranspose();
			mRet.vShowMatrixData();
			break;
			case '4':
			cout<<"Enter Matrix B: "<<endl;
			mA.mAdd();
			break;
			case '5':
			cout<<"Enter Matrix B: "<<endl;
			mA.mSubtract();
			break;
			case '6':
			mA.mMultiply();
			break;
			default :
			cout<<"Enter a valid option\n";

		}
		cout<<"Do you want to continue? (y)";	
		cin>>inp;
	}while(inp=='y');
	return 0;
}
/**********************************************
Enter the number of rows: 3
Enter the number of Columns: 3
Element 0 0 : 1
Element 0 1 : 1
Element 0 2 : 1
Element 1 0 : 0
Element 1 1 : 1
Element 1 2 : 1
Element 2 0 : 0
Element 2 1 : 0
Element 2 2 : 1
1. Check whether given matrix is upper triangular or not
2. Compute summation of diagonal elements
3. Compute transpose of matrix
4. Add a Matrix to it
5. Subtract a Matrix to it
6. Multiply a Matrix to it
Matrix A
1 1 1 
0 1 1 
0 0 1 
1
The given Matrix is upper triangular.
Do you want to continue? (y)y
1. Check whether given matrix is upper triangular or not
2. Compute summation of diagonal elements
3. Compute transpose of matrix
4. Add a Matrix to it
5. Subtract a Matrix to it
6. Multiply a Matrix to it
Matrix A
1 1 1 
0 1 1 
0 0 1 
2
Sum of diagonal elements is: 
Sum of diagonal 1 is: 3
Sum of diagonal 2 is: 2
Do you want to continue? (y)y
1. Check whether given matrix is upper triangular or not
2. Compute summation of diagonal elements
3. Compute transpose of matrix
4. Add a Matrix to it
5. Subtract a Matrix to it
6. Multiply a Matrix to it
Matrix A
1 1 1 
0 1 1 
0 0 1 
3
Transpose is: 
1 0 0 
1 1 0 
1 1 1 
Do you want to continue? (y)y
1. Check whether given matrix is upper triangular or not
2. Compute summation of diagonal elements
3. Compute transpose of matrix
4. Add a Matrix to it
5. Subtract a Matrix to it
6. Multiply a Matrix to it
Matrix A
1 1 1 
0 1 1 
0 0 1 
4
Enter Matrix B: 
Enter the number of rows: 3
Enter the number of Columns: 3
Element 0 0 : 2
Element 0 1 : 2
Element 0 2 : 2
Element 1 0 : 2
Element 1 1 : 2
Element 1 2 : 2
Element 2 0 : 2
Element 2 1 : 2
Element 2 2 : 2
Sum of Matrix is:
3 3 3 
2 3 3 
2 2 3 
Do you want to continue? (y)y
1. Check whether given matrix is upper triangular or not
2. Compute summation of diagonal elements
3. Compute transpose of matrix
4. Add a Matrix to it
5. Subtract a Matrix to it
6. Multiply a Matrix to it
Matrix A
1 1 1 
0 1 1 
0 0 1 
5
Enter Matrix B: 
Enter the number of rows: 3
Enter the number of Columns: 3
Element 0 0 : 1
Element 0 1 : 1
Element 0 2 : 1
Element 1 0 : 1
Element 1 1 : 1
Element 1 2 : 1
Element 2 0 : 1
Element 2 1 : 1
Element 2 2 : 1
Difference of Matrix is:
0 0 0 
-1 0 0 
-1 -1 0 
Do you want to continue? (y)y
1. Check whether given matrix is upper triangular or not
2. Compute summation of diagonal elements
3. Compute transpose of matrix
4. Add a Matrix to it
5. Subtract a Matrix to it
6. Multiply a Matrix to it
Matrix A
1 1 1 
0 1 1 
0 0 1 
6
Enter Matrix B:
Enter the number of rows: 3
Enter the number of Columns: 3
Element 0 0 : 3
Element 0 1 : 3
Element 0 2 : 3
Element 1 0 : 3
Element 1 1 : 3
Element 1 2 : 3
Element 2 0 : 3
Element 2 1 : 3
Element 2 2 : 3
Product of Matrix is:
9 9 9 
6 6 6 
3 3 3 
Do you want to continue? (y)*/

